{"version":3,"sources":["js/custom/joke.js","js/custom/main.js"],"names":["joke","getJoke","jokeType","Promise","resolve","reject","fetch","concat","then","res","json","data","catch","error","createJoke","setup","punchline","method","headers","body","JSON","stringify","type","exports","_joke","require","document","addEventListener","querySelector","e","value","disabled","trim","innerHTML","console","log","id","alert"],"mappings":";AAiCE,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,EAjCK,IAAMA,EAAO,CAElBC,QAAS,SAACC,GACR,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3BC,MAAKC,0EAAAA,OACuEL,IAEzEM,KAAK,SAACC,GAAG,OAAKA,EAAIC,SAClBF,KAAK,SAACG,GAAI,OAAKP,EAAQO,EAAK,MAC5BC,MAAM,SAACC,GAAK,OAAKR,EAAOQ,QAG/BC,WAAY,SAACZ,EAAUa,EAAOC,GAC5B,OAAO,IAAIb,QAAQ,SAACC,EAASC,GAC3BC,MAEE,0EAAA,CACEW,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,KAAMpB,EACNa,MAAOA,EACPC,UAAWA,MAIdR,KAAK,SAACC,GAAG,OAAKA,EAAIC,SAClBF,KAAK,SAACG,GAAI,OAAKP,EAAQO,KACvBC,MAAM,SAACC,GAAK,OAAKR,EAAOQ,SAG/BU,QAAAvB,KAAAA;;;;ACiDD,aAjFD,IAAAwB,EAAAC,QAAA,UAGAA,QAAA,iCAEAC,SAASC,iBAAiB,mBAAoB,WAE5C1B,EAAQ,aAGVyB,SAASE,cAAc,aAAaD,iBAAiB,QAAS,SAACE,GAC7D,IAAM3B,EAAWwB,SAASE,cACxB,iCACAE,MAGFJ,SAASE,cAAc,aAAaG,UAAW,EAE/C9B,EAAQC,KAGVwB,SAASE,cAAc,gBAAgBD,iBAAiB,QAAS,SAACE,GAChE,IAAM3B,EAAWwB,SAASE,cACxB,mCACAE,MACIf,EAAQW,SACXE,cAAc,+BACdE,MAAME,OACHhB,EAAYU,SACfE,cAAc,mCACdE,MAAME,OAEI,IAATjB,GAA4B,IAAbC,IAGnBU,SAASE,cAAc,gBAAgBG,UAAW,EAElDjB,EAAWZ,EAAUa,EAAOC,MAI9B,IAAMf,EAAU,SAACC,GACfF,EAAI,KACDC,QAAQC,GACRM,KAAK,SAACR,GACL0B,SAASE,cACP,SACAK,UAAS1B,sBAAAA,OAAyBP,EAAKe,MAAMiB,OAAMzB,uCAAAA,OAAsCP,EAAKgB,UAAUgB,OAAc,UAGxHN,SAASE,cAAc,aAAaG,UAAW,IAEhDnB,MAAM,SAACC,GACNa,SAASE,cACP,SACAK,UAA8D,mDAGhEP,SAASE,cAAc,aAAaG,UAAW,KAK/CjB,EAAa,SAACZ,EAAUa,EAAOC,GACnChB,EAAI,KACDc,WAAWZ,EAAUa,EAAOC,GAC5BR,KAAK,SAACC,GACLyB,QAAQC,IAAI1B,GAEE,IAAVA,EAAI2B,GAAUC,MAAM,6BACnBA,MAAM,wBAGXX,SAASE,cAAc,gBAAgBG,UAAW,IAEnDnB,MAAM,SAACC,GACNqB,QAAQC,IAAItB,GAGZa,SAASE,cAAc,gBAAgBG,UAAW","file":"main.fffc8e3c.js","sourceRoot":"../src","sourcesContent":["export const joke = {\r\n  // Fetch random joke from API\r\n  getJoke: (jokeType) => {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(\r\n        `https://us-central1-dadsofunny.cloudfunctions.net/DadJokes/random/type/${jokeType}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => resolve(data[0]))\r\n        .catch((error) => reject(error));\r\n    });\r\n  },\r\n  createJoke: (jokeType, setup, punchline) => {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(\r\n        `https://us-central1-dadsofunny.cloudfunctions.net/DadJokes/jokes/create`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'content-type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            type: jokeType,\r\n            setup: setup,\r\n            punchline: punchline,\r\n          }),\r\n        }\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => resolve(data))\r\n        .catch((error) => reject(error));\r\n    });\r\n  },\r\n};\r\n","// Import content from another script\r\nimport { joke } from './joke';\r\n\r\n// Import style\r\nimport './../../scss/custom/main.scss';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  // Get joke as soon as page loads\r\n  getJoke('general');\r\n});\r\n\r\ndocument.querySelector('#get-joke').addEventListener('click', (e) => {\r\n  const jokeType = document.querySelector(\r\n    '#hear-joke-section #joke-type'\r\n  ).value;\r\n\r\n  // Make button disabled until joke fetching is completed\r\n  document.querySelector('#get-joke').disabled = true;\r\n\r\n  getJoke(jokeType);\r\n});\r\n\r\ndocument.querySelector('#create-joke').addEventListener('click', (e) => {\r\n  const jokeType = document.querySelector(\r\n    '#create-joke-section #joke-type'\r\n  ).value;\r\n  const setup = document\r\n    .querySelector('#create-joke-section #setup')\r\n    .value.trim();\r\n  const punchline = document\r\n    .querySelector('#create-joke-section #punchline')\r\n    .value.trim();\r\n\r\n  if (setup == '' || punchline == '') return;\r\n\r\n  // Make button disabled until joke creation is completed\r\n  document.querySelector('#create-joke').disabled = true;\r\n\r\n  createJoke(jokeType, setup, punchline);\r\n});\r\n\r\n// Get joke from API and display it on page\r\nconst getJoke = (jokeType) => {\r\n  joke\r\n    .getJoke(jokeType)\r\n    .then((joke) => {\r\n      document.querySelector(\r\n        '#joke'\r\n      ).innerHTML = `<div class=\"setup\">${joke.setup.trim()}</div><br /><div class=\"punchline\">${joke.punchline.trim()}</div>`;\r\n\r\n      // Enable button\r\n      document.querySelector('#get-joke').disabled = false;\r\n    })\r\n    .catch((error) => {\r\n      document.querySelector(\r\n        '#joke'\r\n      ).innerHTML = `<div class=\"error\">Something went wrong !!</div>`;\r\n\r\n      //Enable button\r\n      document.querySelector('#get-joke').disabled = false;\r\n    });\r\n};\r\n\r\n// Create joke using API\r\nconst createJoke = (jokeType, setup, punchline) => {\r\n  joke\r\n    .createJoke(jokeType, setup, punchline)\r\n    .then((res) => {\r\n      console.log(res);\r\n\r\n      if (res.id != '') alert('joke created successfully');\r\n      else alert('something went wrong');\r\n\r\n      //Enable button\r\n      document.querySelector('#create-joke').disabled = false;\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n\r\n      //Enable button\r\n      document.querySelector('#create-joke').disabled = false;\r\n    });\r\n};\r\n"]}