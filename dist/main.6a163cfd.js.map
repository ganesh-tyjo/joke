{"version":3,"sources":["js/custom/joke.js","js/custom/main.js"],"names":["joke","getJoke","jokeType","Promise","resolve","reject","fetch","then","res","json","data","catch","error","createJoke","setup","punchline","method","headers","body","JSON","stringify","type","document","addEventListener","querySelector","e","value","disabled","trim","innerHTML","console","log","id","alert"],"mappings":";AAAO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,EAAA,IAAMA,EAAO,CAElBC,QAAS,SAACC,GACD,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BC,MAC4EJ,0EAAAA,OAAAA,IAEzEK,KAAK,SAACC,GAAQA,OAAAA,EAAIC,SAClBF,KAAK,SAACG,GAASN,OAAAA,EAAQM,EAAK,MAC5BC,MAAM,SAACC,GAAUP,OAAAA,EAAOO,QAG/BC,WAAY,SAACX,EAAUY,EAAOC,GACrB,OAAA,IAAIZ,QAAQ,SAACC,EAASC,GAC3BC,MAEE,0EAAA,CACEU,OAAQ,OACRC,QAAS,CACS,eAAA,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,KAAMnB,EACNY,MAAOA,EACPC,UAAWA,MAIdR,KAAK,SAACC,GAAQA,OAAAA,EAAIC,SAClBF,KAAK,SAACG,GAASN,OAAAA,EAAQM,KACvBC,MAAM,SAACC,GAAUP,OAAAA,EAAOO,SA9B1B,QAAA,KAAA;;;;ACgEP,aA/DA,IAAA,EAAA,QAAA,UAGA,QAAA,iCAEAU,SAASC,iBAAiB,mBAAoB,WAE5CtB,EAAQ,aAGVqB,SAASE,cAAc,aAAaD,iBAAiB,QAAS,SAACE,GACvDvB,IAAAA,EAAWoB,SAASE,cACxB,iCACAE,MAGFJ,SAASE,cAAc,aAAaG,UAAW,EAE/C1B,EAAQC,KAGVoB,SAASE,cAAc,gBAAgBD,iBAAiB,QAAS,SAACE,GAC1DvB,IAAAA,EAAWoB,SAASE,cACxB,mCACAE,MACIZ,EAAQQ,SACXE,cAAc,+BACdE,MAAME,OACHb,EAAYO,SACfE,cAAc,mCACdE,MAAME,OAEI,IAATd,GAA4B,IAAbC,IAGnBO,SAASE,cAAc,gBAAgBG,UAAW,EAElDd,EAAWX,EAAUY,EAAOC,MAI9B,IAAMd,EAAU,SAACC,GAEZD,EAAAA,KAAAA,QAAQC,GACRK,KAAK,SAACP,GACLsB,SAASE,cACP,SACAK,UAAkC7B,sBAAAA,OAAAA,EAAKc,MAAMc,OAA4C5B,uCAAAA,OAAAA,EAAKe,UAAUa,OAH5F,UAMdN,SAASE,cAAc,aAAaG,UAAW,IAEhDhB,MAAM,SAACC,GACNU,SAASE,cACP,SACAK,UAHc,mDAMhBP,SAASE,cAAc,aAAaG,UAAW,KAK/Cd,EAAa,SAACX,EAAUY,EAAOC,GAEhCF,EAAAA,KAAAA,WAAWX,EAAUY,EAAOC,GAC5BR,KAAK,SAACC,GACLsB,QAAQC,IAAIvB,GAEE,IAAVA,EAAIwB,GAAUC,MAAM,6BACnBA,MAAM,wBAGXX,SAASE,cAAc,gBAAgBG,UAAW,IAEnDhB,MAAM,SAACC,GACNkB,QAAQC,IAAInB,GAGZU,SAASE,cAAc,gBAAgBG,UAAW","file":"main.6a163cfd.js","sourceRoot":"..\\src","sourcesContent":["export const joke = {\r\n  // Fetch random joke from API\r\n  getJoke: (jokeType) => {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(\r\n        `https://us-central1-dadsofunny.cloudfunctions.net/DadJokes/random/type/${jokeType}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => resolve(data[0]))\r\n        .catch((error) => reject(error));\r\n    });\r\n  },\r\n  createJoke: (jokeType, setup, punchline) => {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(\r\n        `https://us-central1-dadsofunny.cloudfunctions.net/DadJokes/jokes/create`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'content-type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            type: jokeType,\r\n            setup: setup,\r\n            punchline: punchline,\r\n          }),\r\n        }\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => resolve(data))\r\n        .catch((error) => reject(error));\r\n    });\r\n  },\r\n};\r\n","// Import content from another script\r\nimport { joke } from './joke';\r\n\r\n// Import style\r\nimport './../../scss/custom/main.scss';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  // Get joke as soon as page loads\r\n  getJoke('general');\r\n});\r\n\r\ndocument.querySelector('#get-joke').addEventListener('click', (e) => {\r\n  const jokeType = document.querySelector(\r\n    '#hear-joke-section #joke-type'\r\n  ).value;\r\n\r\n  // Make button disabled until joke fetching is completed\r\n  document.querySelector('#get-joke').disabled = true;\r\n\r\n  getJoke(jokeType);\r\n});\r\n\r\ndocument.querySelector('#create-joke').addEventListener('click', (e) => {\r\n  const jokeType = document.querySelector(\r\n    '#create-joke-section #joke-type'\r\n  ).value;\r\n  const setup = document\r\n    .querySelector('#create-joke-section #setup')\r\n    .value.trim();\r\n  const punchline = document\r\n    .querySelector('#create-joke-section #punchline')\r\n    .value.trim();\r\n\r\n  if (setup == '' || punchline == '') return;\r\n\r\n  // Make button disabled until joke creation is completed\r\n  document.querySelector('#create-joke').disabled = true;\r\n\r\n  createJoke(jokeType, setup, punchline);\r\n});\r\n\r\n// Get joke from API and display it on page\r\nconst getJoke = (jokeType) => {\r\n  joke\r\n    .getJoke(jokeType)\r\n    .then((joke) => {\r\n      document.querySelector(\r\n        '#joke'\r\n      ).innerHTML = `<div class=\"setup\">${joke.setup.trim()}</div><br /><div class=\"punchline\">${joke.punchline.trim()}</div>`;\r\n\r\n      // Enable button\r\n      document.querySelector('#get-joke').disabled = false;\r\n    })\r\n    .catch((error) => {\r\n      document.querySelector(\r\n        '#joke'\r\n      ).innerHTML = `<div class=\"error\">Something went wrong !!</div>`;\r\n\r\n      //Enable button\r\n      document.querySelector('#get-joke').disabled = false;\r\n    });\r\n};\r\n\r\n// Create joke using API\r\nconst createJoke = (jokeType, setup, punchline) => {\r\n  joke\r\n    .createJoke(jokeType, setup, punchline)\r\n    .then((res) => {\r\n      console.log(res);\r\n\r\n      if (res.id != '') alert('joke created successfully');\r\n      else alert('something went wrong');\r\n\r\n      //Enable button\r\n      document.querySelector('#create-joke').disabled = false;\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n\r\n      //Enable button\r\n      document.querySelector('#create-joke').disabled = false;\r\n    });\r\n};\r\n"]}